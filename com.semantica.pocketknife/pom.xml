<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.semantica</groupId>
    <artifactId>core-unit-testing-pocketknife</artifactId>
    <version>0.0.4-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>core-unit-testing-pocketknife</name>
    <url>https://github.com/SemanticaSoftware/unit-testing-pocketknife</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <com.fasterxml.jackson.artifacts.version>2.12.7.1</com.fasterxml.jackson.artifacts.version>
        <junit.jupiter.version>5.4.2</junit.jupiter.version> <!-- Beware junit-platform-maven-plugin v1.0.0-M5 requires version <= 5.5.0-M1 -->
        <apache.log4j.version>2.13.3</apache.log4j.version>
        <maven.min-version>3.3.9</maven.min-version>
        <!-- Build library with compatibility for java 1.8-14 (Source cannot use >1.8 language features) -->
        <!--<project.target.jvm.version>1.8</project.target.jvm.version> <project.target.jvm.source.exclude>module-info.java</project.target.jvm.source.exclude> -->  <!-- 5<=${project.target.jvm.version}<9 only -->
        <!-- Build library with compatibility for java 14 -->
        <project.target.jvm.version>14</project.target.jvm.version>
        <project.target.jvm.source.exclude>exclude-nothing</project.target.jvm.source.exclude>  <!-- ${project.target.jvm.version}>=9 only -->
    </properties>

    <prerequisites>
        <!-- Only required by versions-maven-plugin, minimum maven version actually enforced by maven-enforcer-plugin -->
        <maven>${maven.min-version}</maven>
    </prerequisites>

    <dependencies>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.0-alpha1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${com.fasterxml.jackson.artifacts.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${com.fasterxml.jackson.artifacts.version}</version>
        </dependency>

        <dependency>
            <groupId>org.objenesis</groupId>
            <artifactId>objenesis</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.10.12</version>
        </dependency>

        <dependency>
            <groupId>org.opentest4j</groupId>
            <artifactId>opentest4j</artifactId>
            <version>1.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.10</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>29.0-jre</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- junit-jupiter-params and junit-jupiter-engine dependencies are provided by junit-platform-maven-plugin -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j18-impl</artifactId>
            <version>${apache.log4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${apache.log4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>3.3.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>de.sormuras.junit</groupId>
                <artifactId>junit-platform-maven-plugin</artifactId>
                <version>1.0.0-M5</version>
                <extensions>true</extensions> <!-- Necessary to execute the plugin in 'test' phase. -->
                <configuration>
                    <tweaks>
                        <defaultAssertionStatus>true</defaultAssertionStatus>
                    </tweaks>
                </configuration>
            </plugin>
            <plugin>
                <!-- Execute with maven goals: versions:display-plugin-updates versions:display-dependency-updates -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>
            <plugin>
                <!-- Uses javadoc from $JAVA_HOME -->
                <!-- execute with maven goals: clean package javadoc:jar -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <reportOutputDirectory>${basedir}</reportOutputDirectory>
                    <destDir>docs</destDir>
                    <verbose>true</verbose>
                    <failOnError>false</failOnError>
                    <!-- Tell the javadoc plugin that we should generate ${project.target.jvm.version} javadoc and ignore the module-info.java source file. -->
                    <jdkToolchain>
                        <version>${project.target.jvm.version}</version>
                    </jdkToolchain>
                    <sourceFileExcludes>
                        <sourceFileExclude>${project.target.jvm.source.exclude}</sourceFileExclude>
                    </sourceFileExcludes>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-toolchains-plugin</artifactId>
                    <version>3.0.0</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>toolchain</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <toolchains>
                            <jdk>
                                <version>1.8</version>
                                <vendor>oracle</vendor>
                            </jdk>
                            <jdk>
                                <version>14</version>
                                <vendor>openjdk</vendor>
                            </jdk>
                        </toolchains>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <!-- Needed by the ReflectionPojoTester which uses Parameter.getName() -->
                        <parameters>true</parameters>
                        <testCompilerArgument>-parameters</testCompilerArgument>
                        <!-- For this library to be compatible with Java ${project.target.jvm.version} -->
                        <!-- see https://maven.apache.org/plugins/maven-compiler-plugin/examples/module-info.html -->
                        <!-- https://maven.apache.org/plugins/maven-compiler-plugin/examples/set-compiler-source-and-target.html -->
                        <jdkToolchain>
                            <version>${project.target.jvm.version}</version>
                        </jdkToolchain>
                        <source>${project.target.jvm.version}</source>
                        <target>${project.target.jvm.version}</target>
                    </configuration>
                    <!-- Two-phase compile for compatibility with Java version ${project.target.jvm.version} -->
                    <executions>
                        <execution>
                            <id>default-compile</id>
                            <configuration>
                                <!-- Compile everything to ensure module-info contains right entries -->
                                <jdkToolchain>
                                    <version>14</version>
                                </jdkToolchain>
                                <release>14</release>
                            </configuration>
                        </execution>
                        <execution>
                            <id>base-compile</id>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <!-- Recompile everything for target VM except the module-info.java -->
                            <configuration>
                                <excludes>
                                    <exclude>${project.target.jvm.source.exclude}</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <!-- Execute with maven goal: dependency:copy-dependencies@copy-dependencies -->
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.2</version>
                    <executions>
                        <execution>
                            <id>copy-dependencies</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                <overWriteReleases>false</overWriteReleases>
                                <overWriteSnapshots>false</overWriteSnapshots>
                                <overWriteIfNewer>true</overWriteIfNewer>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <!-- Execute with maven goals: enforcer:enforce -->
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M2</version>
                    <executions>
                        <execution>
                            <id>default-cli</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>${maven.min-version}</version>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M3</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.8.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <repository>
            <id>dev-azure-com-semantica-nl-sem-maven</id>
            <url>https://pkgs.dev.azure.com/semantica-nl/_packaging/sem-maven/maven/v1</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>dev-azure-com-semantica-nl-sem-maven</id>
            <url>https://pkgs.dev.azure.com/semantica-nl/_packaging/sem-maven/maven/v1</url>
        </repository>
        <snapshotRepository>
            <id>dev-azure-com-semantica-nl-sem-maven</id>
            <url>https://pkgs.dev.azure.com/semantica-nl/_packaging/sem-maven/maven/v1</url>
        </snapshotRepository>
    </distributionManagement>
</project>